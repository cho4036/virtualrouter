apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: virtualrouter-role
  namespace: virtualrouter
rules:
- apiGroups:
  - "virtualrouter.tmax.hypercloud.com"
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - "coordination.k8s.io"
  resources:
  - "leases"
  verbs:
  - '*'
# - apiGroups:
#   - policy
#   resources:
#   - podsecuritypolicies
#   resourceNames:
#   - virtualrouter-psp
#   verbs:
#   - use
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: virtualrouter-sa
  namespace: virtualrouter
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: virtualrouter-rb
  namespace: virtualrouter
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: virtualrouter-role
subjects:
- kind: ServiceAccount
  name: virtualrouter-sa
  namespace: virtualrouter
---
# apiVersion: policy/v1beta1
# kind: PodSecurityPolicy
# metadata:
#   name: virtualrouter-psp
#   namespace: virtualrouter
# spec:
#   allowPrivilegeEscalation: false
#   allowCapabilities:
#   - NET_RAW
#   privileged: true
#   runAsUser:
#     rule: RunAsAny
#   supplementalGroups:
#     rule: RunAsAny
#   fsGroup:
#     rule: RunAsAny
#   seLinux:
#       rule: RunAsAny
---
apiVersion: v1
kind: Pod
metadata:
  name: virtualrouter1
  namespace: virtualrouter
spec:
  serviceAccount: virtualrouter-sa
  containers:
  - name: virtualrouter
    image: 192.168.7.191:5000/virtualrouter:0.0.2
    imagePullPolicy: Always
    securityContext:
      capabilities:
        add:
          - NET_RAW
      privileged: true

# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: controller
#   namespace: virtualrouter
#   labels:
#     app: controller
# spec:
#   replicas: 2
#   selector:
#     matchLabels:
#       app: controller
#   template:
#     metadata:
#       namespace: sample-controller
#       labels:
#         app: controller
#     spec:
#       serviceAccount: vm-controller-sa
#       containers:
#       - name: controller
#         image: controller:0.1
#         imagePullPolicy: Never
#         args:
#         - "-lease-lock-name=controller-lease-lock"
#         - "-lease-lock-namespace=sample-controller"
#         env:
#         - name: VM_PROVIDER_SVC_NAME
#           value: "vmprovider"
#         - name: VM_PROVIDER_SVC_NAMESPACE
#           value: "sample-controller"
#         - name: VM_PROVIDER_PORT
#           value: "8001"
#         - name: PROMETHEUS_EXPORTER_ADDRESS
#           value: ":2112"
#         - name: CONTROLLER_NAMESPACE
#           valueFrom:
#             fieldRef:
#               fieldPath: metadata.namespace
#         ports:
#         - name: prometheus
#           containerPort: 2112